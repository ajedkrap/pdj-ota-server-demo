services:
  postgres:
    image: postgres:15-alpine
    container_name: codepush-postgres-dev
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - codepush-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  strapi:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: codepush-strapi-dev
    env_file:
      - .env.development
    environment:
      NODE_ENV: development
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./public/uploads:/app/public/uploads
      - ./src:/app/src
      - ./config:/app/config
      - ./node_modules:/app/node_modules
    ports:
      - "1337:1337"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - codepush-network-dev

networks:
  codepush-network-dev:
    driver: bridge

volumes:
  postgres_data_dev: